/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'
    
    id 'eclipse'
    
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    implementation 'com.google.guava:guava:27.0.1-jre'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'ch.qos.logback', name:'logback-classic', version: '1.2.3'
    compile group: 'ch.qos.logback', name:'logback-core', version: '1.2.3' 
    

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

// Define the main class for the application
 mainClassName = 'com.eudriscabrera.examples.java.App'

 task tiposDatosYValoresPorDefecto(type: JavaExec){
       group = 'Java Fundamentos Tips'
       description = '001 - Conocer los tipos de datos y sus valores por defecto'
       
       classpath sourceSets.main.runtimeClasspath
       main = 'com.eudriscabrera.examples.java.valoresdefectoytipos.ValoresPorDefecto'
 }
 
 task manejoCadenasCaracteres(type: JavaExec){
    group = 'Java Fundamentos Tips'
    description = '002 - Concatenar las cadenas de caracteres de forma correcta'
  
    classpath sourceSets.main.runtimeClasspath
    main = 'com.eudriscabrera.examples.java.manejocadenas.ManejadorCadenasCaracteres'
 }  

 
 task cuandoUtilizarStringBuilder(type: JavaExec){
   group = 'Java Fundamentos Tips'
   description = '003 - Para cadenas grandes de caracteres usar `StringBuilder` en lugar de StringBuffer'
   
    classpath sourceSets.main.runtimeClasspath
    main = 'com.eudriscabrera.examples.java.manejocadenas.ManejadorCadenasCaracteres' 
 }
 
  
  task eviteTipoDatosRaw(type: JavaExec){
    group = 'Java Fundamentos Tips'
    description = '004 - Evite Raw Type y en su lugar utilice tipos genericos'
    
    classpath sourceSets.main.runtimeClasspath
    main = 'com.eudriscabrera.examples.java.genericos.TiposRawYGenericos' 
 }
 
 task usarTiposEnumerados(type: JavaExec){
   group = 'Java Fundamentos Tips'
   description = '005 - Usar tipos enumerados (enum)'
   
   classpath sourceSets.main.runtimeClasspath
   main = 'com.eudriscabrera.examples.java.valoresconstantes.ClienteOrden'    
   
 }
 
 task conocerPaquetesMasUtilizados(type: JavaExec){
   group = 'Java Fundamentos Tips'
   description = '006 - Conocer los paquetes más utilizados'
 }
 
 
 task comprenderUsoyManejoExcepciones(type: JavaExec){
   group = 'Java Fundamentos Tips'
   description = '007 - Comprender el uso y manejo de excepciones'
   
   classpath sourceSets.main.runtimeClasspath   
   main = 'com.eudriscabrera.examples.java.excepciones.ClienteCalculadora'
 }  
  
  
 task hacerLoggingCorrectamente(type: JavaExec){
   group = 'Java Fundamentos Tips'
   description = '008 - Manejar los logs de forma más inteligente'
   
    classpath sourceSets.main.runtimeClasspath
    main = 'com.eudriscabrera.examples.java.logger.DemoLogger'
 }
 
 task manejarCorrectamenteLosRecursos(type: JavaExec){
   group = 'Java Fundamentos Tips'
   description = '009 - Tratar los recursos (de archivos, conexiones a base de datos, socket, etc.) de forma correcta'
   
   classpath sourceSets.main.runtimeClasspath
    main = 'com.eudriscabrera.examples.java.manejorecursos.DemoRecursosArchivosyDB'
 }
 
  task utilizarVarags(type: JavaExec){
     group = 'Java Fundamentos Tips'
     description = '010 - Usar Varargs'  
     
     classpath sourceSets.main.runtimeClasspath     
     main = 'com.eudriscabrera.examples.java.DemoVarargs'     
  }
  
 
  task realizarMicroOptimizacion(type: JavaExec){
   group = 'Java Fundamentos Tips'
   description = '011 - Siempre tener en cuenta que micro optimizaciones pueden mejorar el rendimiento de nuestra aplicación'
   
   classpath sourceSets.main.runtimeClasspath
  }
 
 
  task utilicePathYFiles (type: JavaExec){
     group = 'Java Fundamentos Tips'
     description = '012 - Utilizar Paths y Files'
     
     classpath sourceSets.main.runtimeClasspath
     main = 'com.eudriscabrera.examples.java.ManejandoArchivos'  
  
  }
  
  task adoptarExpresionesLambdas(type: JavaExec){
     group = 'Java Fundamentos Tips'
     description = '013 - Aprender cómo y por qué usar Expresiones Lambdas'         
  
  }
  
 task explorarAPIStream(type: JavaExec){
     group = 'Java Fundamentos Tips'
     description = '014 - Utilizar el API Stream y las expresiones Lambda en conjunto para proporcionar potentes capacidades de filtrado'
    
    classpath sourceSets.main.runtimeClasspath
     main = 'com.eudriscabrera.examples.java.streams.StreamBasicos'  
  }  
 
 task aprovecharElUsoDeOptional(type: JavaExec){
   group = 'Java Fundamentos Tips'
   description = '015 - Entender, aceptar y aprovechar Optional'
   
   classpath sourceSets.main.runtimeClasspath   
   main = 'com.eudriscabrera.examples.java.DemoManejadorNulo'  
 }